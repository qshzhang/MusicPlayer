<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGAAMBQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEoUlEQVRYR8VXR0sm
        WxB9P0MYzDnn7MaAARVzZEw4gwlz2KgLURAURRFR0YULERciOIoIKjgYmUFFRcUEYg4IY0CX9TgFt+n+
        uj/Dg8cszuLrvrfqVN1Tp+/3z+vrK/1N/CcC5+fntLy8TLOzszQ3N0e/fv2iu7s7zbXv4cMEVldXqays
        jFxcXMjAwICMjIzI1NSUYWJiwr+DgoKosbGRDg8PNWNo4V0Ca2trFB0dzUkCAgLI2dmZSeiDo6MjWVlZ
        UUlJCZ2enmrGlEMvgZeXF2ppaSFDQ0Nqamqi4+Njqq6ufpeAANa5u7vTjx8/NOMLaBJ4fn6mb9++kbe3
        N3egr6+PLCwsKCwsjIKDgzUT6gM68vj4qMohoEmgoKCAEx0cHFBiYiJ5eHjQ9PQ0raysUEhIiGait/D0
        9KTKIaAigGrd3Nw4OZKlpKSwqHJyclhwOAZfX1/NRPoAApgUFKCbT0EA54wkCwsLlJ2dTQkJCbS3t8cd
        yMjIYCKdnZ1ka2urmUgfcKRLS0t8hLrdUBAoLCxk9Y6NjZGDgwN3AdVWVVXR+vo6iwrTgHPVSqQPILC4
        uEg2NjY0PDysTQDmglmG6CC+oaEhqqmpofj4eNra2mIR2tnZcUAfHx8qLy+nrq4uamtro6ysLHJ1dVUl
        FpATiImJ4QlTEcDZY369vLzI3Nycz8zY2Ji2t7cpMDBQSp6fn09nZ2dMdGBggIli3mFUaLFuckBOAL83
        NjbUBL5+/aqYcVTs7+9P7e3tTATPIERYLiqGG4KopaUlB+7v72eNwKxEDAEQgK4Egd7eXjUBVK67EbC2
        tiYnJydu8e7uLmvEzMxMtQ5rZmZmqKenR/VOl0BFRYWaANSvu1EO+MH19TU7I37jLDFWEKynpyc/g3mh
        C/b29tI+CBdn/vPnT4lAenq6mgDULTZpobi4mBOi5fg9MjIiBcnNzeVn8A0kE2sAkWxwcFAa39jYWGmv
        RECrrXLAF1CdqKK0tJRn+uTkhNuPZ0lJSXR1daXopvgWwNDk61QERBv1ARq5ubmhtLQ06RkC4kigE/zG
        VKAzogOoHh3BRImjA+A3KgKpqanSAn1obm5mcwoNDVW9Kyoq4gmBR4hKMZqIHRUVpdBFa2urmgAeigVv
        AX6BTmCUoAu45Pj4ON3e3nJrMZrQQkdHB8fFO3n1AG5SKgKbm5sfslhUFxcXx6JChfPz83xvQIVIjjVT
        U1NSApASHQHgEw8PD2oCAMxILHwPUDTEBpOCaQnymZmZCqutq6tT7ANZeU4FAdilfPFnAbP6/fu3FO/o
        6EhyUQDOenFxIb0HFASA2tpaRdDPAKMpj/X9+3dpbAF8N+TvARWB+/t7vgfIA38UUDumBHHQiS9fvkjv
        KisrFUcjoCIA4OuGm7A8+EcQHh5O+/v77BVotxi9vLw8hfDk0CQAXF5esvvpJnkLIBAZGcltx4UGz+rr
        6z9/KRXAVwyfWT8/P1UyfRCJYVaTk5OaceV4k4AAuoHbT0REhCqhLpKTk1lsf/780Yyliw8REICIdnZ2
        aHR0lJ2uoaGB/4p1d3fTxMQEf5i09r2FTxH4P/CXCbzSv5Ge3Fa/jfgMAAAAAElFTkSuQmCC
</value>
  </data>
</root>